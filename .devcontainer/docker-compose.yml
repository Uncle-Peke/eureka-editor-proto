services:
  db:
    image: postgres:17
    container_name: db
    labels:
      - devcontainer.metadata
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: Passw0rd!
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d app"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: mcr.microsoft.com/devcontainers/go:1-1.22-bullseye
    container_name: migrate
    labels:
      - devcontainer.metadata
    working_dir: /workspace
    volumes:
      - ../migrate:/workspace
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgres://admin:Passw0rd!@db:5432/app?sslmode=disable
    restart: unless-stopped
    command: ["sleep", "infinity"]

  backend:
    image: mcr.microsoft.com/devcontainers/go:1-1.22-bullseye
    container_name: backend
    labels:
      - devcontainer.metadata
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ../backend:/workspace
    depends_on:
      - db
    ports:
      - "8080:8080"
      - "2345:2345"  # Delve debugger port
    environment:
      - DATABASE_URL=postgres://admin:Passw0rd!@db:5432/app?sslmode=disable
    restart: unless-stopped
    command: ["sleep", "infinity"]

  frontend:
    image: mcr.microsoft.com/devcontainers/javascript-node:20-bullseye
    container_name: frontend
    labels:
      - devcontainer.metadata
    env_file:
      - .env
    working_dir: /workspace
    volumes:
      - ../frontend:/workspace
    ports:
      - "3000:3000"
      - "9229:9229"  # Node.js debugger port
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
      - db
    restart: unless-stopped
    command: ["sleep", "infinity"]

